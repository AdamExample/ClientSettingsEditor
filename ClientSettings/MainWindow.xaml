<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClientSettings"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="ClientSettings.MainWindow"
        mc:Ignorable="d"
        Title="ClientSettings Editor" Height="800" Width="900" MinWidth="400" SizeChanged="Window_SizeChanged">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Background="{x:Static SystemColors.WindowBrush}" FocusManager.IsFocusScope="False">
            <MenuItem Header="File">
                <MenuItem Header="Open" Click="Open_Click"/>
                <MenuItem Header="Save" IsEnabled="{Binding CanSaveFile}" Click="Save_Click"/>
                <MenuItem Header="Save As" IsEnabled="{Binding CanSaveFile}" Click="SaveAs_Click"/>
                <Separator/>
                <MenuItem Header="Cloud Import" Click="CloudImport_Click"/>
                <MenuItem Header="Cloud Export" Click="CloudExport_Click" IsEnabled="{Binding CanSaveFile}"/>
                <Separator/>
                <MenuItem Header="Exit" Click="Exit_Click"/>
            </MenuItem>
        </Menu>

        <!-- Credit to David Anson http://dlaa.me/blog/post/9898803 -->
        <!-- TreeGrid "Control" -->
        <Border Grid.Row="1" BorderBrush="{x:Static SystemColors.ControlDarkBrush}" BorderThickness="0 1 0 0">
            <!-- Resources -->
            <Border.Resources>
                <ContextMenu x:Key="PropertyContextMenu">
                    <MenuItem Header="Duplicate" Click="Duplicate_Click"/>
                    <MenuItem Header="Delete" Click="Delete_Click"/>
                </ContextMenu>
                <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="IsReadOnly" Value="True"/>
                    <Setter Property="ContextMenu" Value="{StaticResource PropertyContextMenu}"/>
                </Style>
                <Style x:Key="TextBoxNameStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding EditableName}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                            <Setter Property="Background" Value="White"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EditableName}" Value="False">
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}"/>
                            <Setter Property="Background" Value="{x:Static SystemColors.MenuBrush}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="TextBoxValueStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding EditableValue}" Value="True">
                            <Setter Property="IsReadOnly" Value="False"/>
                            <Setter Property="Background" Value="White"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding EditableValue}" Value="False">
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}"/>
                            <Setter Property="Background" Value="{x:Static SystemColors.MenuBrush}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Resources>

            <!-- Content -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <!-- Placeholders for five columns of ToggleButton -->
                    <ColumnDefinition Width="Auto" x:Name="ToggleColumn"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="268" x:Name="PropertyColumn"/>
                    <ColumnDefinition Width="250" x:Name="TypeColumn"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Empty TreeViewItem to measure the size of its ToggleButton into the "Toggle" group-->
                <TreeViewItem Grid.Column="0" Padding="0"/>
                <TreeViewItem Grid.Column="1" Padding="0"/>
                <TreeViewItem Grid.Column="2" Padding="0"/>
                <TreeViewItem Grid.Column="3" Padding="0"/>
                <TreeViewItem Grid.Column="4" Padding="0"/>

                <Grid Grid.ColumnSpan="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0"/>
                        <!-- Placeholders for six columns of ToggleButton -->
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="{Binding Width, ElementName=PropertyColumn, Mode=TwoWay}" MinWidth="100" x:Name="PropertySplitColumn"/>
                        <ColumnDefinition Width="{Binding Width, ElementName=TypeColumn, Mode=TwoWay}" MinWidth="100" x:Name="TypeSplitColumn"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DataGridColumnHeader Grid.Column="0" Grid.ColumnSpan="8" IsHitTestVisible="False">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TreeViewItem Padding="0" Height="0"/>
                            <Label Grid.Column="1" Padding="0" Content="Property"/>
                        </Grid>
                    </DataGridColumnHeader>
                    <TreeViewItem Grid.Column="1" Padding="0"/>
                    <TreeViewItem Grid.Column="2" Padding="0"/>
                    <TreeViewItem Grid.Column="3" Padding="0"/>
                    <TreeViewItem Grid.Column="4" Padding="0"/>
                    <TreeViewItem Grid.Column="5" Padding="0"/>
                    <TreeViewItem Grid.Column="6" Padding="0"/>
                    <GridSplitter Grid.Column="7" DragCompleted="GridSplitter_DragCompleted" Width="10" Margin="0 0 -5 0" Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                    <DataGridColumnHeader Grid.Column="8" Content="Type" IsHitTestVisible="False"/>
                    <GridSplitter Grid.Column="8" DragCompleted="GridSplitter_DragCompleted" Width="10" Margin="0 0 -5 0" Background="Transparent"  VerticalAlignment="Stretch" HorizontalAlignment="Right"/>
                    <DataGridColumnHeader Grid.Column="9" Content="Value" IsHitTestVisible="False"/>
                </Grid>

                <!-- Data rows -->
                <TreeView Grid.Row="1" Grid.ColumnSpan="8" ItemsSource="{Binding PropertyList}" BorderBrush="{x:Static SystemColors.ControlDarkBrush}"
                          BorderThickness="0 1 0 0" Padding="0" HorizontalContentAlignment="Stretch" Background="{x:Static SystemColors.MenuBrush}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
                        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
                        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>

                        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Width" Value="16"/>
                            <Setter Property="Height" Value="16"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <Condition Property="IsChecked" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Rectangle Fill="{TemplateBinding Background}" Margin="-1000 0 0 0" SnapsToDevicePixels="True"/>
                                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                            <Border x:Name="Bd" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="false">
                                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <!-- Level 0 template leaves space for 5 child "Toggle" levels -->
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Width, ElementName=PropertyColumn, Mode=OneWay}"/>
                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                    <ColumnDefinition Width="{Binding Width, ElementName=TypeColumn, Mode=OneWay}"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Grid.ColumnSpan="6"  Text="{Binding Name, Mode=TwoWay}" Style="{StaticResource TextBoxNameStyle}"/>
                                <TextBox Grid.Column="6" Text="{Binding Type, Mode=OneWay}" Style="{StaticResource TextBoxStyle}"/>
                                <TextBox Grid.Column="7" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Style="{StaticResource TextBoxValueStyle}"/>
                                <Rectangle SnapsToDevicePixels="True" Grid.Column="6" Stroke="{x:Static SystemColors.ControlDarkBrush}" StrokeThickness="1" Margin="0 -1 0 0"/>
                                <Path SnapsToDevicePixels="True" Margin="-1000 0 0 0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="8" VerticalAlignment="Bottom" Stretch="Fill" StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Stroke="{x:Static SystemColors.ControlDarkBrush}" Data="M 0 0 H 1" />
                            </Grid>

                            <!-- Level 1 template leaves space for 4 child "Toggle" levels -->
                            <HierarchicalDataTemplate.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                    <Grid SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{Binding Width, ElementName=PropertyColumn, Mode=OneWay}"/>
                                            <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                            <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                            <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                            <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                            <ColumnDefinition Width="{Binding Width, ElementName=TypeColumn, Mode=OneWay}"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Grid.Column="0" Grid.ColumnSpan="5"  Text="{Binding Name, Mode=TwoWay}" Style="{StaticResource TextBoxNameStyle}"/>
                                        <TextBox Grid.Column="5" Text="{Binding Type, Mode=OneWay}" Style="{StaticResource TextBoxStyle}"/>
                                        <TextBox Grid.Column="6" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Style="{StaticResource TextBoxValueStyle}"/>
                                        <Rectangle SnapsToDevicePixels="True" Grid.Column="5" Stroke="{x:Static SystemColors.ControlDarkBrush}" StrokeThickness="1" Margin="0 -1 0 0"/>
                                        <Path SnapsToDevicePixels="True" Margin="-1000 0 0 0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="7" VerticalAlignment="Bottom" Stretch="Fill" StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Stroke="{x:Static SystemColors.ControlDarkBrush}" Data="M 0 0 H 1" />
                                    </Grid>

                                    <!-- Level 2 template leaves space for 3 child "Toggle" levels -->
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                            <Grid SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding Width, ElementName=PropertyColumn, Mode=OneWay}"/>
                                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                                    <ColumnDefinition Width="{Binding Width, ElementName=TypeColumn, Mode=OneWay}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox Grid.Column="0" Grid.ColumnSpan="4" Text="{Binding Name, Mode=TwoWay}" Style="{StaticResource TextBoxNameStyle}"/>
                                                <TextBox Grid.Column="4" Text="{Binding Type, Mode=OneWay}" Style="{StaticResource TextBoxStyle}"/>
                                                <TextBox Grid.Column="5" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Style="{StaticResource TextBoxValueStyle}"/>
                                                <Rectangle SnapsToDevicePixels="True" Grid.Column="4" Stroke="{x:Static SystemColors.ControlDarkBrush}" StrokeThickness="1" Margin="0 -1 0 0"/>
                                                <Path SnapsToDevicePixels="True" Margin="-1000 0 0 0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" VerticalAlignment="Bottom" Stretch="Fill" StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Stroke="{x:Static SystemColors.ControlDarkBrush}" Data="M 0 0 H 1" />
                                            </Grid>

                                            <!-- Level 3 template leaves space for 2 child "Toggle" levels -->
                                            <HierarchicalDataTemplate.ItemTemplate>
                                                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                                    <Grid SnapsToDevicePixels="True">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="{Binding Width, ElementName=PropertyColumn, Mode=OneWay}"/>
                                                            <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                                            <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                                            <ColumnDefinition Width="{Binding Width, ElementName=TypeColumn, Mode=OneWay}"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBox Grid.Column="0" Grid.ColumnSpan="3" Text="{Binding Name, Mode=TwoWay}" Style="{StaticResource TextBoxNameStyle}"/>
                                                        <TextBox Grid.Column="3" Text="{Binding Type, Mode=OneWay}" Style="{StaticResource TextBoxStyle}"/>
                                                        <TextBox Grid.Column="4" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Style="{StaticResource TextBoxValueStyle}"/>
                                                        <Rectangle SnapsToDevicePixels="True" Grid.Column="3" Stroke="{x:Static SystemColors.ControlDarkBrush}" StrokeThickness="1" Margin="0 -1 0 0"/>
                                                        <Path SnapsToDevicePixels="True" Margin="-1000 0 0 0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" VerticalAlignment="Bottom" Stretch="Fill" StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Stroke="{x:Static SystemColors.ControlDarkBrush}" Data="M 0 0 H 1" />
                                                    </Grid>

                                                    <!-- Level 4 template leaves space for 1 child "Toggle" level -->
                                                    <HierarchicalDataTemplate.ItemTemplate>
                                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                                            <Grid SnapsToDevicePixels="True">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="{Binding Width, ElementName=PropertyColumn, Mode=OneWay}"/>
                                                                    <ColumnDefinition Width="{Binding ActualWidth, ElementName=ToggleColumn, Mode=OneWay}"/>
                                                                    <ColumnDefinition Width="{Binding Width, ElementName=TypeColumn, Mode=OneWay}"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBox Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding Name, Mode=TwoWay}" Style="{StaticResource TextBoxNameStyle}"/>
                                                                <TextBox Grid.Column="2" Text="{Binding Type, Mode=OneWay}" Style="{StaticResource TextBoxStyle}"/>
                                                                <TextBox Grid.Column="3" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Style="{StaticResource TextBoxValueStyle}"/>
                                                                <Rectangle SnapsToDevicePixels="True" Grid.Column="2" Stroke="{x:Static SystemColors.ControlDarkBrush}" StrokeThickness="1" Margin="0 -1 0 0"/>
                                                                <Path SnapsToDevicePixels="True" Margin="-1000 0 0 0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Bottom" Stretch="Fill" StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Stroke="{x:Static SystemColors.ControlDarkBrush}" Data="M 0 0 H 1" />
                                                            </Grid>

                                                            <!-- Level 5 template has no children -->
                                                            <HierarchicalDataTemplate.ItemTemplate>
                                                                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                                                    <Grid SnapsToDevicePixels="True">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="{Binding Width, ElementName=PropertyColumn, Mode=OneWay}"/>
                                                                            <ColumnDefinition Width="{Binding Width, ElementName=TypeColumn, Mode=OneWay}"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <TextBox Grid.Column="0" Text="{Binding Name, Mode=TwoWay}" Style="{StaticResource TextBoxNameStyle}"/>
                                                                        <TextBox Grid.Column="1" Text="{Binding Type, Mode=OneWay}" Style="{StaticResource TextBoxStyle}"/>
                                                                        <TextBox Grid.Column="2" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Style="{StaticResource TextBoxValueStyle}"/>
                                                                        <Rectangle SnapsToDevicePixels="True" Grid.Column="1" Stroke="{x:Static SystemColors.ControlDarkBrush}" StrokeThickness="1" Margin="0 -1 0 0"/>
                                                                        <Path SnapsToDevicePixels="True" Margin="-1000 0 0 0" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Stretch="Fill" StrokeThickness="1" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Stroke="{x:Static SystemColors.ControlDarkBrush}" Data="M 0 0 H 1" />
                                                                    </Grid>
                                                                </HierarchicalDataTemplate>
                                                            </HierarchicalDataTemplate.ItemTemplate>
                                                        </HierarchicalDataTemplate>
                                                    </HierarchicalDataTemplate.ItemTemplate>
                                                </HierarchicalDataTemplate>
                                            </HierarchicalDataTemplate.ItemTemplate>
                                        </HierarchicalDataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </Grid>
        </Border>
    </Grid>
</Window>
